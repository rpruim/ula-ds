<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-orthogonal-bases"
	 xmlns:xi="http://www.w3.org/2001/XInclude">
  <title> Orthogonal bases and projections  </title>

  <introduction>
    <p>
      We know that a linear system <m>A\xvec=\bvec</m> is inconsistent
      when <m>\bvec</m> is not in <m>\col(A)</m>, the column space of
      <m>A</m>.  Later in this chapter, we'll develop a
      strategy for dealing with inconsistent systems by finding
      <m>\bhat</m>, the vector in <m>\col(A)</m> that minimizes the
      distance to
      <m>\bvec</m> (i.e., minimizes <m> \len{\bvec - \bhat}</m>).  
	  The equation <m>A\xvec=\bhat</m> is therefore
      consistent and its solution set can provide us with useful
      information about the original system <m>A\xvec=\bvec</m>.
    </p>

    <p>
      In this section and the next, we'll develop some techniques that
      enable us to find <m>\bhat</m>, the vector in a given subspace
      <m>W</m> that is closest to a given vector <m>\bvec</m>.  
    </p>

    <exploration xml:id="preview-orthogonal-basis">
      <statement>
      <p>
	For this activity, it will be helpful to recall
	the distributive property of dot products:
	<me>
	  \vvec\cdot(c_1\wvec_1+c_2\wvec_2) = c_1\vvec\cdot\wvec_1 +
	  c_2\vvec\cdot\wvec_2
	</me>.
	We'll work with the basis of <m>\real^2</m> formed by the vectors
	<me>
	  \wvec_1=\twovec12,\hspace{24pt}
	  \wvec_2=\twovec{-2}1
	</me>.
	<ol marker="a.">
	  <li>
	    <p>
	      Verify that the vectors <m>\wvec_1</m> and
	      <m>\wvec_2</m> are orthogonal.
	    </p>
	  </li>
	  
	  <li>
	    <p>
	      Suppose that <m>\bvec =\twovec74</m> and find the dot
	      products <m>\wvec_1\cdot\bvec</m> and
	      <m>\wvec_2\cdot\bvec</m>.
	    </p>
	  </li>
	  
	  <li>
	    <p>
	      We would like to express <m>\bvec</m> as a linear
	      combination of <m>\wvec_1</m> and <m>\wvec_2</m>, which
	      means that we need to find weights <m>c_1</m> and
	      <m>c_2</m> such that
	      <me>
		\bvec = c_1\wvec_1 + c_2\wvec_2
	      </me>.
	      To find the weight <m>c_1</m>, dot both sides of this
	      expression with <m>\wvec_1</m>:
	      <me>
		\bvec\cdot\wvec_1 = (c_1\wvec_1 +
		c_2\wvec_2)\cdot\wvec_1
	      </me>,
	      and apply the distributive property.
	    </p>
	  </li>
	  
	  <li>
	    <p>
	      In a similar fashion, find the weight <m>c_2</m>.
	    </p>
	  </li>

	  <li>
		<p>
			Now look at the expression for <m>c_i \wvec_i</m> and express it in terms of a projection.
		</p>
	  </li>
	  
	  <li>
	    <p>
	      Verify that <m>\bvec = c_1\wvec_1+c_2\wvec_2</m> using
	      the weights you have found.
	    </p>
	  </li>
	</ol>
      </p>
      </statement>

      <answer>
	<p>
	  <ol marker="a.">
	    <li>
	      <p>
		We compute the dot products
		<m>\wvec_1\cdot\wvec_2=0</m>,
		<m>\wvec_1\cdot\wvec_3=0</m>, and
		<m>\wvec_2\cdot\wvec_3=0</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		An orthogonal set of vectors is linearly
		independent.
	      </p>
	    </li>
	    <li>
	      <p>
		<m>\bvec = -2\wvec_1 + 3\wvec_2 +
		\wvec_3</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		<m>
		  \uvec_1 = \frac{1}{\sqrt{3}}\wvec_1 =
		  \threevec{1/\sqrt{3}}{-1/\sqrt{3}}{1/\sqrt{3}}
		</m>
	      </p>
	    </li>
	    <li>
	      <p>
		We find that
		<me>
		  \uvec_2 =
		  \threevec{1/\sqrt{2}}{1/\sqrt{2}}0,\hspace{24pt}
		  \uvec_3 =
		  \threevec{1/\sqrt{6}}{-1/\sqrt{6}}{-2/\sqrt{6}}
		</me>
	      </p>
	    </li>
	    <li>
	      <p>
		<m>Q^{\transpose}Q=I</m>
	      </p>
	    </li>
	  </ol>
	</p>
      </answer>
		
      <solution>
	<p>
	  <ol marker="a.">
	    <li>
	      <p>
		We can compute that <m>\wvec_1\cdot\wvec_2 = 0</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		<m>\bvec\cdot\wvec_1 = 15</m> and
		<m>\bvec\cdot\wvec_2 = -10</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		<m>c_1 = \frac{\bvec\cdot\wvec_1}{\wvec_1\cdot\wvec_1}
		= 3</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		<m>c_2 = \frac{\bvec\cdot\wvec_2}{\wvec_2\cdot\wvec_2}
		= -2</m>.
	      </p>
	    </li>
		<li>
			<p>
			<m>c_i \wvec_i = \frac{\bvec\cdot\wvec_i}{\wvec_i\cdot\wvec_i} = \proj{\bvec}{\wvec_i}</m>.
			</p>
		</li>
	    <li>
	      <p> <m>\bvec = 3\wvec_1 - 2\wvec_2</m>.
	      </p>
	    </li>
	  </ol>
	</p>
      </solution>
		
    </exploration>

    <p>
      We frequently ask to write a given vector as a linear
      combination of given basis vectors.  In the past, we have done
      this by solving a linear system.  The preview
      activity illustrates how this task can be simplified when the
      basis vectors are orthogonal to each other.  We'll explore
      this and other uses of orthogonal bases in this section.
    </p>

  </introduction>
	
  <subsection>
    <title> Orthogonal sets </title>

    <p>
      The preview activity dealt with a basis of <m>\real^2</m> formed
      by two orthogonal vectors.  More generally, we will consider a 
      set of orthogonal vectors, as described in the next definition.
    </p>

    <definition>
      <idx><h> orthogonal set of vectors</h> </idx>
	
      <statement>
	<p>
	  By an <term> orthogonal set</term> of vectors, we mean a set of
	  nonzero vectors each of which is orthogonal to the others.
	</p>
      </statement>
    </definition>

    <example xml:id="example-orthogonal-basis">
      <statement>
	<p>
	  The 3-dimensional vectors
	  <me>
	    \wvec_1 = \threevec1{-1}1,\hspace{24pt}
	    \wvec_2 = \threevec1{1}0,\hspace{24pt}
	    \wvec_3 = \threevec1{-1}{-2}.
	  </me>
	  form an orthogonal set, which can be verified by computing
	  <me>
	    \begin{array}{rcl}
	    \wvec_1\cdot\wvec_2 \amp {}={} \amp 0 \\
	    \wvec_1\cdot\wvec_3 \amp {}={} \amp 0 \\
	    \wvec_2\cdot\wvec_3 \amp {}={} \amp 0\\
	    \end{array}
	  </me>.
	  Notice that this set of vectors forms a basis for
	  <m>\real^3</m>.
	</p>
      </statement>
    </example>

    <example xml:id="example-orthogonal-set">
      <statement>
	<p>
	  The vectors
	  <me>
	    \wvec_1 = \fourvec1111,\hspace{24pt}
	    \wvec_2 = \fourvec11{-1}{-1},\hspace{24pt}
	    \wvec_3 = \fourvec1{-1}1{-1}
	  </me>
	  form an orthogonal set of 4-dimensional vectors.  Since there
	  are only three vectors, this set does not form a basis for
	  <m>\real^4</m>.  It does, however, form a basis for a
	  3-dimensional subspace <m>W</m> of <m>\real^4</m>.
	</p>
      </statement>
    </example>

    <p>
      Suppose that a vector <m>\bvec</m> is a linear combination
      of an orthogonal set of vectors
      <m>\wvec_1,\wvec_2,\ldots,\wvec_n</m>;  that is, 
      suppose that
      <me>
	c_1\wvec_1 + c_2\wvec_2 + \cdots + c_n\wvec_n = \bvec.
      </me>
      Just as in the preview activity, we can find the weight
      <m>c_1</m> by dotting both sides with <m>\wvec_1</m> and
      applying the distributive property of dot products:
      <md>
	<mrow>
	  (c_1\wvec_1 + c_2\wvec_2 + \cdots + c_n\wvec_n)\cdot\wvec_1
	  \amp = \bvec\cdot\wvec_1
	</mrow>
	<mrow>
	  c_1\wvec_1\cdot\wvec_1 + c_2\wvec_2\cdot\wvec_1 +\cdots +
	  c_n\wvec_n\cdot\wvec_1  \amp = \bvec\cdot\wvec_1
	</mrow>
	<mrow>
	  c_1\wvec_1\cdot\wvec_1 \amp = \bvec\cdot\wvec_1
	</mrow>
	<mrow>
	  c_1 \amp = 
	  \frac{\bvec\cdot\wvec_1}{\wvec_1\cdot\wvec_1}
	</mrow>
      </md>.
      Notice how the presence of an orthogonal set causes most
      of the terms in the sum to vanish.  In the same way, we find
      that
      <me>
	c_i = \frac{\bvec\cdot\wvec_i}{\wvec_i\cdot\wvec_i}
      </me>
      so that
      <md>
		<mrow>
	\bvec \amp = \frac{\bvec\cdot\wvec_1}{\wvec_1\cdot\wvec_1}\wvec_1 +
	\frac{\bvec\cdot\wvec_2}{\wvec_2\cdot\wvec_2}\wvec_2 +
	\cdots +
	\frac{\bvec\cdot\wvec_n}{\wvec_n\cdot\wvec_n}\wvec_n \; .
		</mrow>
			<mrow> \amp </mrow>
		<mrow> \amp = 
			\proj{\bvec}{\wvec_1} +
			\proj{\bvec}{\wvec_2} + \cdots +
			\proj{\bvec}{\wvec_n}  \;.
		</mrow>
      </md>
    </p>

    <p>
      We'll record this fact in the following proposition.
    </p>

    <proposition xml:id="prop-orthog-lincomb">
      <statement>
	<p>
	  If a vector <m>\bvec</m> is a linear combination of an
	  orthogonal set of vectors
	  <m>\wvec_1,\wvec_2,\ldots,\wvec_n</m>, then
		<md>
			<mrow>
				\bvec \amp = 
				\proj{\bvec}{\wvec_1} +
				\proj{\bvec}{\wvec_2} + \cdots +
				\proj{\bvec}{\wvec_n} 
			</mrow>
			<mrow> \amp </mrow>
			<mrow> \amp = 
					\frac{\bvec\cdot\wvec_1}{\wvec_1\cdot\wvec_1}\wvec_1 +
					\frac{\bvec\cdot\wvec_2}{\wvec_2\cdot\wvec_2}\wvec_2 +
					\cdots +
					\frac{\bvec\cdot\wvec_n}{\wvec_n\cdot\wvec_n}\wvec_n
			</mrow>
		</md>.
	  <!-- <me>
	    \bvec = \frac{\bvec\cdot\wvec_1}{\wvec_1\cdot\wvec_1}\wvec_1 +
	    \frac{\bvec\cdot\wvec_2}{\wvec_2\cdot\wvec_2}\wvec_2 +
	    \cdots +
	    \frac{\bvec\cdot\wvec_n}{\wvec_n\cdot\wvec_n}\wvec_n\text{.}
	  </me> -->
	</p>
      </statement>
    </proposition>
      
    <p>
      Using this proposition, we can see that an orthogonal set of
      vectors must be linearly independent.  Suppose, for instance,
      that <m>\wvec_1,\wvec_2,\ldots,\wvec_n</m> is a set of nonzero
      orthogonal vectors and that one of the vectors is a linear
      combination of the others, say,
      <me>
	\wvec_3 = c_1\wvec_1 + c_2\wvec_2
      </me>.
      We therefore know that
      <me>
	\wvec_3 =
	\frac{\wvec_3\cdot\wvec_1}{\wvec_1\cdot\wvec_1}\wvec_1 +
	\frac{\wvec_3\cdot\wvec_2}{\wvec_2\cdot\wvec_2}\wvec_2
	= \zerovec
      </me>,
      which cannot happen since we know that <m>\wvec_3</m> is nonzero.
      This tells us that
    </p>

    <proposition xml:id="prop-orthog-lin-indep">
      <statement>
	<p>
	  An orthogonal set of vectors
	  <m>\wvec_1,\wvec_2,\ldots,\wvec_n</m>
	  is linearly independent.
	</p>
      </statement>
    </proposition>

    <p>
      If <m>n</m> vectors in an orthogonal set in <m>\real^m</m>, they
      form a linearly independent set in <m>\real^m</m> and are
      therefore a basis for the subspace
      <m>W=\laspan{\wvec_1,\wvec_2,\ldots,\wvec_n}</m>.  This means that 
	  <m>n \le m</m>.  If <m> n = m</m>, then the vectors form 
	  an <term>orthogonal basis</term> for <m>\real^m</m>.
    </p>

    <activity>
      <statement>
	<p>
	  Consider the vectors
	  <me>
	    \wvec_1 = \threevec1{-1}1,\hspace{24pt}
	    \wvec_2 = \threevec1{1}0,\hspace{24pt}
	    \wvec_3 = \threevec1{-1}{-2}.
	  </me>
	  <ol marker="a.">
	    <li>
	      <p>
		Verify that this set forms an
		orthogonal set of <m>3</m>-dimensional vectors.
	      </p>
	      <sage language="python">
		<input>
		</input>
	      </sage>
	    </li>

	    <li>
	      <p>
		Explain why we know that this set of vectors forms a
		basis for <m>\real^3</m>.
	      </p>
	    </li>
	    
	    <li>
	      <p>
		Suppose that <m>\bvec=\threevec24{-4}</m>.  Find the
		weights <m>c_1</m>, <m>c_2</m>, and <m>c_3</m> that express
		<m>\bvec</m> as a linear combination
		<m>\bvec=c_1\wvec_1 + c_2\wvec_2 + c_3\wvec_3
		</m>
		using <xref ref="prop-orthog-lincomb" />.
	      </p>
	    </li>

	    <li>
	      <p>
		If we multiply a vector <m>\vvec</m> by a positive
		scalar <m>s</m>, the length of <m>\vvec</m> is also
		multiplied by <m>s</m>;  that is,
		<m>\len{s\vvec} = s\len{\vvec}</m>.
	      </p>

	      <p>
		<idx><h>unit vector</h></idx>
		Using this observation, find a vector <m>\uvec_1</m>
		that is parallel to <m>\wvec_1</m> and has length 1.
		Such vectors are called <term>unit vectors</term>.
	      </p>
		<sage language="python">
		  <input>
		  </input>
		</sage>
	    </li>
	    <li>
	      <p> Similarly, find a
	      unit vector <m>\uvec_2</m> that is parallel to
	      <m>\wvec_2</m> and a unit vector <m>\uvec_3</m> that is
	      parallel to <m>\wvec_3</m>. 
	      </p>
	    </li>

	    <li>
	      <p>
		Construct the matrix
		<m>Q=\begin{bmatrix}
		\uvec_1 \amp \uvec_2 \amp \uvec_3
		\end{bmatrix}
		</m> and find the product <m>Q^{\transpose}Q</m>.  Use <xref
		ref="prop-transpose-multiplication" /> to explain your
		result. 
	      </p>
	    </li>
	  </ol>
	</p>
      </statement>

      <solution>
	<p>
	  <ol marker="a.">
	    <li>
	      <p>
		We compute the dot products
		<m>\wvec_1\cdot\wvec_2=0</m>,
		<m>\wvec_1\cdot\wvec_3=0</m>, and
		<m>\wvec_2\cdot\wvec_3=0</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		We know that an orthogonal set of vectors is linearly
		independent.  Therefore, we have a set of three
		linearly independent vectors in <m>\real^3</m> so they
		must form a basis for <m>\real^3</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		We find that <m>\bvec = -2\wvec_1 + 3\wvec_2 +
		\wvec_3</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		Since <m>\len{\wvec_1} = \sqrt{3}</m>, we find
		<me>
		  \uvec_1 = \frac{1}{\sqrt{3}}\wvec_1 =
		  \threevec{1/\sqrt{3}}{-1/\sqrt{3}}{1/\sqrt{3}}
		</me>
	      </p>
	    </li>
	    <li>
	      <p>
		We find that
		<me>
		  \uvec_2 =
		  \threevec{1/\sqrt{2}}{1/\sqrt{2}}0,\hspace{24pt}
		  \uvec_3 =
		  \threevec{1/\sqrt{6}}{-1/\sqrt{6}}{-2/\sqrt{6}}
		</me>
	      </p>
	    </li>
	    <li>
	      <p>
		We find <m>Q^{\transpose}Q=I</m> since each entry in this matrix
		product is the dot product of two columns of <m>Q</m>.
	      </p>
	    </li>
	  </ol>
	</p>
      </solution>
		  
    </activity>

    <p>
      This activity introduces an important way of modifying an
      orthogonal set so that the vectors in the set have unit length.
	  Since <m>\len{s \wvec} = s \len{\wvec}</m> for any vector <m>\wvec</m>
	  and scalar <m>s</m>,
	  <me>
		\len{\frac{\wvec}{\len{\wvec}}} = \frac{\len{\wvec}}{\len{\wvec}} = 1
	  </me>.
	  That is, if we divide each vector in an orthogonal set by its length,
	  the result is an orthogonal set of vectors each of which is a unit vector.
    </p>

    <p>
      Orthogonal sets of unit vectors are called
      <term>orthonormal</term> and are especially convenient.
    </p>

    <definition>
      <idx> othonormal set </idx>
      <statement>
	<p>
	  An <term>orthonormal</term> set is an orthogonal set of unit vectors.
	</p>
      </statement>
    </definition>

    <example>
      <statement>
	<p>
	  The vectors
	  <me>
	    \uvec_1=\twovec{1/\sqrt{2}}{1/\sqrt{2}},\hspace{24pt}
	    \uvec_2=\twovec{-1/\sqrt{2}}{1/\sqrt{2}}
	  </me>
	  are an orthonormal set of vectors in <m>\real^2</m> and
	  form an orthonormal basis for <m>\real^2</m>.
	</p>

	<p>
	  If we form the matrix
	  <me>
	    Q=\begin{bmatrix}
	    \uvec_1 \amp \uvec_2
	    \end{bmatrix}
	    = \begin{bmatrix}
	    1/\sqrt{2} \amp -1/\sqrt{2} \\
	    1/\sqrt{2} \amp 1/\sqrt{2} \\
	    \end{bmatrix}
	  </me>,
	  we find that <m>Q^{\transpose}Q = I</m> since <xref
	  ref="prop-transpose-multiplication" /> tells us that
	  <me>
	    Q^{\transpose}Q = \begin{bmatrix}
	    \uvec_1\cdot\uvec_1 \amp \uvec_1\cdot\uvec_2 \\
	    \uvec_2\cdot\uvec_1 \amp \uvec_2\cdot\uvec_2 \\
	    \end{bmatrix}
	    =
	    \begin{bmatrix}
	    1 \amp 0 \\
	    0 \amp 1 \\
	    \end{bmatrix}
	  </me>
	</p>
      </statement>
    </example>

    <p>
      The previous activity and example illustrate the next
      proposition. 
    </p>

    <proposition xml:id="prop-orthonormal-QTQ">
      <statement>
	<p>
	  If the columns of the <m>m\by n</m> matrix <m>Q</m> form
	  an orthonormal set, then 
	  <m>Q^{\transpose}Q = I_n</m>, the <m>n\by n</m> identity matrix.
	</p>
      </statement>
    </proposition>

	<note>
		<p>
		Notice that <xref ref="prop-orthonormal-QTQ" /> implies that the inverese  
		of square orthonormal matrix is its transpose.  
		</p>
	</note>
  </subsection>

  <subsection>
    <title> Orthogonal projections </title>

    <p>
      We now turn to an important problem that will appear in many
      forms in the rest of our explorations.  Suppose, as shown in
      <xref ref="fig-3d-orthog-proj" />, that we have a subspace
      <m>W</m> of <m>\real^m</m> and a vector <m>\bvec</m> that is not
      in that subspace.  We would like to find the vector <m>\bhat</m>
      in <m>W</m> that is closest to <m>\bvec</m>, meaning the
      distance between <m>\bhat</m> and <m>\bvec</m> is as small as
      possible. 
    </p>

    <figure xml:id="fig-3d-orthog-proj">
      <caption>
	Given a plane in <m>\real^3</m> and a vector <m>\bvec</m> not
	in the plane, we wish to find the vector <m>\bhat</m> in the
	plane that is closest to <m>\bvec</m>.
      </caption>
      <sidebyside width="55%">
	<image source="images/3d-orthog-proj-3" />
      </sidebyside>
    </figure>

    <p>
      To get started, let's consider a simpler problem where we have
      a line <m>L</m> in <m>\real^2</m>, defined by the vector
      <m>\wvec</m>, and another vector <m>\bvec</m> that is not on the
      line, as shown on the left of <xref ref="fig-projection-line-a"
      />.  We wish to find <m>\bhat</m>, the vector on the line that 
      is closest to <m>\bvec</m>, as illustrated in the right of
      <xref ref="fig-projection-line-a" />.
    </p>

    <figure xml:id="fig-projection-line-a">
      <caption>
	Given a line <m>L</m> and a vector <m>\bvec</m>, we seek the
	vector <m>\bhat</m> on <m>L</m> that is closest to
	<m>\bvec</m>.  
      </caption>
	<!-- <image source="images/projection-line-4" /> -->
	<image source="images/gram-schmidt-intro" />
    </figure>

    <p>
		We have already seen how to find <m>\bhat</m>.
		<me>
			\bhat = \proj{\bvec}{\wvec} = \frac{\bvec \cdot \wvec}{\len{\wvec}^2} \wvec
		</me>
		Our goal now is to expand on this idea to determine the 
		orthogonal projection of a vector onto any <em>subspace</em> of <m>\real^m</m>.
	</p>
		

    <!-- <definition>
      <idx>orthogonal projection</idx>
      <statement>
	<p>
	  Given a vector <m>\bvec</m> in <m>\real^m</m> and a subspace
	  <m>W</m> of <m>\real^m</m>, the <term>orthogonal
	  projection</term> of <m>\bvec</m> onto <m>W</m> is the vector
	  <m>\bhat</m> in <m>W</m> that is closest to <m>\bvec</m>.
	  It is characterized by the property that <m>\bvec-\bhat</m>
	  is orthogonal to <m>W</m>.
	</p>
      </statement>
    </definition> -->

    <activity>
      <statement>
	<p>
	  This activity demonstrates how to determine the orthogonal
	  projection of a vector onto a subspace of <m>\real^m</m>.
	  <ol marker="a.">
	    <li>
	      <p>
		Let's begin by considering a line <m>L</m>, defined by
		the vector <m>\wvec=\twovec21</m>, and a vector
		<m>\bvec=\twovec24</m> not on <m>L</m>, as illustrated in
		<xref ref="fig-projection-line-c" />.  
	      </p>
	      
	      <figure xml:id="fig-projection-line-c">
		<caption>
		  Finding the orthogonal projection of <m>\bvec</m> onto
		  the line defined by <m>\wvec</m>.
		</caption>
		<sidebyside widths="45% 45%">
		  <image source="images/projection-line-4" />
		  <image source="images/projection-line-2" />
		</sidebyside>
	      </figure>

	      <p>
		<ol marker="1.">
		  <li>
		    <p>
			  We already know the formula for <m>\bhat = \proj{\bvec}{\wvec}</m>.
			  But let's rederive it using properties of the dot product.
			  First notice that <m>\bhat = s\wvec</m> for some scalar <m>s</m>.
		      Since <m>\bvec-\bhat = \bvec - s\wvec</m> is orthogonal to 
		      <m>\wvec</m>, what do we know about the dot product 
		      <me>
					(\bvec-s\wvec)\cdot\wvec
		      </me>?
		    </p>
		  </li>
		  
		  <li>
		    <p>
		      Apply the distributive property of dot products to
		      find the scalar <m>s</m>.  What is the vector
		      <m>\bhat</m>, the orthogonal projection of
		      <m>\bvec</m> onto 
		      <m>L</m>? 
		    </p>
		  </li>
		  
		  <li>
		    <p>
		      More generally, explain why the orthogonal
		      projection of  
		      <m>\bvec</m> onto the line defined by
		      <m>\wvec</m> is 
		      <me>
			\bhat=
			\frac{\bvec\cdot\wvec}{\wvec\cdot\wvec}~\wvec
		      </me>.
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>

	    <li>
	      <p>
		The same ideas apply more generally.  Suppose we have an
		orthogonal set of vectors <m>\wvec_1=\threevec22{-1}</m>
		and <m>\wvec_2=\threevec102</m> that
		define a plane <m>W</m> in <m>\real^3</m>.
		If <m>\bvec=\threevec396</m>
		another vector in <m>\real^3</m>, we seek the vector
		<m>\bhat</m> on the plane <m>W</m> closest to <m>\bvec</m>.
		As before, the vector <m>\bvec-\bhat</m> will be
		orthogonal to 
		<m>W</m>, as illustrated in <xref
		ref="fig-3d-orthog" />.
	      </p>
	      
	      <figure xml:id="fig-3d-orthog">
		<caption>
		  Given a plane <m>W</m> defined by the orthogonal vectors
		  <m>\wvec_1</m> and <m>\wvec_2</m> and another vector
		  <m>\bvec</m>, we seek the vector <m>\bhat</m> on <m>W</m>
		  closest to <m>\bvec</m>.
		</caption>
		<sidebyside widths="55%">
<!--		  <image source="images/3d-orthog-proj-1" />-->
		  <image source="images/3d-orthog-proj-2" />
		</sidebyside>
	      </figure>

	      <p>
		<ol marker="1.">
		  <li>
		    <p>
		      The vector <m>\bvec-\bhat</m> is orthogonal to <m>W</m>.
		      What does this say about the dot products:
		      <m>(\bvec-\bhat)\cdot\wvec_1</m> and
		      <m>(\bvec-\bhat)\cdot\wvec_2</m>?
		    </p>
		  </li>
		  
		  <li>
		    <p>
		      Since <m>\bhat</m> is in the plane
		      <m>W</m>, we can write it as a linear combination
		      <m>\bhat = c_1\wvec_1 + c_2\wvec_2</m>.
		      Then
		      <me>
			\bvec-\bhat = \bvec - (c_1\wvec_1+c_2\wvec_2)
		      </me>.
		      Find the weight <m>c_1</m> by dotting
		      <m>\bvec-\bhat</m> with 
		      <m>\wvec_1</m> and applying the distributive
		      property of dot products.  Similarly, find the weight
		      <m>c_2</m>.
		    </p>
		  </li>
		  
		  <li>
		    <p>
		      What is the vector <m>\bhat</m>, the orthogonal
		      projection of <m>\bvec</m> onto the plane <m>W</m>?
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>
	    
	    <li>
	      <p>
		Suppose that <m>W</m> is a subspace of <m>\real^m</m>
		with orthogonal basis
		<m>\wvec_1,\wvec_2,\ldots,\wvec_n</m> and that
		<m>\bvec</m> is a vector in <m>\real^m</m>.  Explain why
		the orthogonal projection of <m>\bvec</m> onto <m>W</m>
		is the vector
		<me>
		  \bhat =
		  \frac{\bvec\cdot\wvec_1}{\wvec_1\cdot\wvec_1}~\wvec_1 + 
		  \frac{\bvec\cdot\wvec_2}{\wvec_2\cdot\wvec_2}~\wvec_2 +
		  \cdots + 
		  \frac{\bvec\cdot\wvec_n}{\wvec_n\cdot\wvec_n}~\wvec_n
		</me>.
	      </p>
	    </li>

	    <li>
	      <p>
		Suppose that <m>\uvec_1,\uvec_2,\ldots,\uvec_n</m> is
		an <term>orthonormal</term> basis for <m>W</m>;  that is,
		the vectors are orthogonal to one another and have unit
		length.  Explain 
		why the orthogonal projection is
		<me>
		  \bhat=
		  (\bvec\cdot\uvec_1)~\uvec_1 + 
		  (\bvec\cdot\uvec_2)~\uvec_2 +
		  \cdots +
		  (\bvec\cdot\uvec_n)~\uvec_n
		</me>.
	      </p>
	    </li>
	    <li>
	      <p>
		If <m>Q=\begin{bmatrix}
		\uvec_1 \amp \uvec_2 \amp \ldots \amp \uvec_n
		\end{bmatrix}
		</m> is the matrix whose columns are an orthonormal
		basis of <m>W</m>, use <xref
		ref="prop-transpose-multiplication" /> to explain why
		<m>\bhat = QQ^{\transpose}\bvec</m>.
	      </p>
	    </li>
	  </ol>
	</p>
      </statement>

      <answer>
	<p>
	  <ol marker="a.">
	    <li>
	      <p>
		<ol marker="1.">
		  <li>
		    <p>
		      0
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\bhat = \twovec{16/5}{8/5}</m>.
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\bhat=
		      \frac{\bvec\cdot\wvec}{\wvec\cdot\wvec}\wvec</m>
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>
	    <li>
	      <p>
		<ol marker="1.">
		  <li>
		    <p>
		      0
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>c_1= 2</m>
		    </p>
		    <p>
		      <m>c_2=3</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\bhat = \threevec744</m>
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>
	    <li>
	      <p>
		We require that <m>\bvec-\bhat</m> be orthogonal to
		every vector <m>\wvec_i</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		<m>c_i=\frac{\bvec\cdot\uvec_i}{\uvec_i\cdot\uvec_i} =
		\bvec\cdot\uvec_i</m>
	      </p>
	    </li>
	    <li>
	      <p>
		Use the fact that <m>Q^{\transpose}\bvec =
		\threevec{\bvec\cdot\uvec_1}{\vdots}{\bvec\cdot\uvec_n}</m>
	      </p>
	    </li>
	  </ol>
	</p>
      </answer>
		      
      <solution>
	<p>
	  <ol marker="a.">
	    <li>
	      <p>
		<ol marker="1.">
		  <li>
		    <p>
		      This dot product should be 0 since the vectors
		      are orthogonal.
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\bhat=\frac{b\cdot\wvec}{\wvec\cdot\wvec}\wvec
		      = \twovec{16/5}{8/5}</m>.
		    </p>
		  </li>
		  <li>
		    <p>
		      As before, <m>\bhat=
		      \frac{\bvec\cdot\wvec}{\wvec\cdot\wvec}\wvec</m>
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>
	    <li>
	      <p>
		<ol marker="1.">
		  <li>
		    <p>
		      These dot products are 0.
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>c_1=\frac{\bvec\cdot\wvec_1}
		      {\wvec_1\cdot\wvec_1} = 2</m>
		    </p>
		    <p>
		      <m>c_2=\frac{\bvec\cdot\wvec_2}
		      {\wvec_2\cdot\wvec_2}  = 3</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\bhat = \threevec744</m>
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>
	    <li>
	      <p>
		We know <m>\bhat=c_1\wvec_1 + c_2\wvec_2 + \cdots +
		c_n\wvec_n</m> and we can find
		<m>c_i=\frac{\bvec\cdot\wvec_i}{\wvec_i\cdot\wvec_i}</m>
		by requiring that <m>\bvec-\bhat</m> be orthogonal to
		every vector <m>\wvec_i</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		The vectors <m>\uvec_i</m> form an orthogonal set and
		since <m>\uvec_i\cdot\uvec_i = \len{\uvec_i}^2 =
		1</m>, the weights are
		<m>c_i=\frac{\bvec\cdot\uvec_i}{\uvec_i\cdot\uvec_i} =
		\bvec\cdot\uvec_i</m>.
	      </p>
	    </li>
	    <li>
	      <p>
		We have <m>Q^{\transpose}\bvec =
		\cthreevec{\bvec\cdot\uvec_1}{\vdots}{\bvec\cdot\uvec_n}</m>
		so that
		<me>QQ^{\transpose}\bvec = 
		  (\bvec\cdot\uvec_1)~\uvec_1 + 
		  (\bvec\cdot\uvec_2)~\uvec_2 +
		  \cdots +
		  (\bvec\cdot\uvec_n)~\uvec_n=\bhat
		</me>.
	      </p>
	    </li>
	  </ol>
	</p>
      </solution>

    </activity>

    <p>
      In all the cases considered in the activity, we are looking
      for <m>\bhat</m>, the vector in a subspace <m>W</m> closest to a 
      vector <m>\bvec</m>, which is found by requiring that
      <m>\bvec-\bhat</m> be orthogonal to <m>W</m>.  This means
      that <m>(\bvec-\bhat)\cdot\wvec = 0</m> for any vector
      <m>\wvec</m> in <m>W</m>.
    </p>

    <p>
      If we have an orthogonal basis
      <m>\wvec_1,\wvec_2,\ldots,\wvec_n</m> for <m>W</m>, then
      <m>\bhat = c_1\wvec_1+c_w\wvec_2+\cdots+c_n\wvec_n</m>.  Therefore, 
      <md>
	<mrow>
	  (\bvec-\bhat)\cdot\wvec_i \amp = 0
	</mrow>
	<mrow>
	  \bvec\cdot\wvec_i \amp = \bhat\cdot\wvec_i
	</mrow>
	<mrow>
	  \bvec\cdot\wvec_i \amp =
	  (c_1\wvec_1+c_2\wvec_2+\cdots + c_n\wvec_n)\cdot\wvec_i
	</mrow>
	<mrow>
	  \bvec\cdot\wvec_i \amp = c_i\wvec_i\cdot\wvec_i
	</mrow>
	<mrow>
	  c_i \amp = \frac{\bvec\cdot\wvec_i}{\wvec_i\cdot\wvec_i}.
	</mrow>
      </md>
      This leads to the projection formula:
    </p>

    <proposition xml:id="prop-proj-formula">
      <title> Projection formula </title>
      <statement>
	<p>
	  If <m>W</m> is a subspace of <m>\real^m</m> having
	  an orthogonal basis <m>\wvec_1,\wvec_2,\ldots, \wvec_n</m>
	  and <m>\bvec</m> is a vector in <m>\real^m</m>, then
	  the
	  orthogonal projection of <m>\bvec</m> onto <m>W</m> is
		<md>
			<mrow>
				\bhat \amp = 
				\proj{\bvec}{\wvec_1} +
				\proj{\bvec}{\wvec_2} + \cdots +
				\proj{\bvec}{\wvec_n} 
			</mrow>
			<mrow> \amp </mrow>
			<mrow> \amp = 
					\frac{\bvec\cdot\wvec_1}{\wvec_1\cdot\wvec_1}\wvec_1 +
					\frac{\bvec\cdot\wvec_2}{\wvec_2\cdot\wvec_2}\wvec_2 +
					\cdots +
					\frac{\bvec\cdot\wvec_n}{\wvec_n\cdot\wvec_n}\wvec_n
			</mrow>
		</md>.
	  <!-- <me>
	    \bhat=
	    \frac{\bvec\cdot\wvec_1}{\wvec_1\cdot\wvec_1}~\wvec_1 + 
	    \frac{\bvec\cdot\wvec_2}{\wvec_2\cdot\wvec_2}~\wvec_2 +
	    \cdots +
	    \frac{\bvec\cdot\wvec_n}{\wvec_n\cdot\wvec_n}~\wvec_n
	  </me>. -->
	</p>
      </statement>
    </proposition>

    <assemblage>
      <title> Caution </title>
      <p>
	Remember that the projection formula given in <xref
	ref="prop-proj-formula" /> applies only when the basis
	<m>\wvec_1,\wvec_2,\cdots,\wvec_n</m> of <m>W</m> is
	<term>orthogonal</term>.
      </p>
    </assemblage>

    <p>
      If we have an orthonormal basis
      <m>\uvec_1,\uvec_2,\ldots,\uvec_n</m> for <m>W</m>, the
      projection formula simplifies to
      <me>
	\bhat=
	(\bvec\cdot\uvec_1)~\uvec_1 + 
	(\bvec\cdot\uvec_2)~\uvec_2 +
	\cdots + 
	(\bvec\cdot\uvec_n)~\uvec_n
      </me>.
      If we then form the matrix
      <me>
	Q =
	\begin{bmatrix}
	\uvec_1 \amp \uvec_2 \amp \ldots \amp \uvec_n 
	\end{bmatrix}
      </me>,
      this expression may be succintly written
      <md>
	<mrow>
	  \bhat \amp {}={}
	  (\bvec\cdot\uvec_1)~\uvec_1 + 
	  (\bvec\cdot\uvec_2)~\uvec_2 +
	  \cdots + 
	  (\bvec\cdot\uvec_n)~\uvec_n
	</mrow>
	<mrow>
	  \amp {}={}
	  \begin{bmatrix}
	  \uvec_1\amp\uvec_2\amp\ldots\amp\uvec_n
	  \end{bmatrix}
	  \begin{bmatrix}
	  \uvec_1\cdot\bvec \\
	  \uvec_2\cdot\bvec \\
	  \vdots \\
	  \uvec_n\cdot\bvec \\
	  \end{bmatrix}
	</mrow>
	<mrow>
	  \amp {}={} QQ^{\transpose}\bvec
	</mrow>
      </md>
    </p>

    <p>
      This leads to the following proposition.
    </p>

    <proposition xml:id="prop-proj-orthonormal">
      <statement>
	<p> If <m>\uvec_1,\uvec_2,\ldots,\uvec_n</m> is an orthonormal
	basis for a subspace <m>W</m> of <m>\real^m</m>, then 
	the matrix transformation that projects
	vectors in <m>\real^m</m> orthogonally onto <m>W</m> is
	represented by the matrix <m>QQ^{\transpose}</m> where 
	<me>
	  Q =
	  \begin{bmatrix}
	  \uvec_1 \amp \uvec_2 \amp \ldots \amp \uvec_n \\
	  \end{bmatrix}
	</me>.
	</p>
      </statement>
    </proposition>

    <example xml:id="example-projection-matrix">
      <statement>
	<p>
	  In the previous activity, we looked at the plane <m>W</m>
	  defined by the two orthogonal vectors
	  <me>
	    \wvec_1=\threevec22{-1},\hspace{24pt}
	    \wvec_2=\threevec102
	  </me>.
	  We can form an orthonormal basis by scaling these
	  vectors to have unit length:
	  <me>
	    \uvec_1=\frac13\threevec22{-1} =
	    \threevec{2/3}{2/3}{-1/3},\hspace{24pt}
	    \uvec_2=\frac1{\sqrt{5}}\threevec102 =
	    \threevec{1/\sqrt{5}}0{2/\sqrt{5}}
	  </me>.
	  Using these vectors, we form the matrix
	  <me>
	    Q =
	    \begin{bmatrix}
	    2/3 \amp 1/\sqrt{5} \\
	    2/3 \amp 0 \\
	    -1/3 \amp 2/\sqrt{5} \\
	    \end{bmatrix}
	  </me>.
	  The projection onto the plane <m>W</m> is then given by
	  the matrix
	  <me>
	    QQ^{\transpose} =
	    \begin{bmatrix}
	    2/3 \amp 1/\sqrt{5} \\
	    2/3 \amp 0 \\
	    -1/3 \amp 2/\sqrt{5} \\
	    \end{bmatrix}
	    \begin{bmatrix}
	    2/3 \amp 2/3 \amp -1/3 \\
	    1/\sqrt{5} \amp 0 \amp 2/\sqrt{5} \\
	    \end{bmatrix}
	    =
	    \begin{bmatrix}
	    {29}/{45} \amp {4}/{9} \amp {8}/{45} \\
	    {4}/{9} \amp {4}/{9} \amp -{2}/{9} \\
	    {8}/{45} \amp -{2}/{9} \amp {41}/{45}
	    \end{bmatrix}
	  </me>.
	</p>

	<p>
	  Let's check that this works by considering the vector
	  <m>\bvec=\threevec100</m> and finding <m>\bhat</m>, its
	  orthogonal projection 
	  onto the plane <m>W</m>.  In terms of the original basis
	  <m>\wvec_1</m> and <m>\wvec_2</m>, the projection formula
	  from <xref ref="prop-proj-formula" /> tells us that
	  <me>
	    \bhat=\frac{\bvec\cdot\wvec_1}
	    {\wvec_1\cdot\wvec_1}~\wvec_1 + 
	    \frac{\bvec\cdot\wvec_2}
	    {\wvec_2\cdot\wvec_2}~\wvec_2 
	    =
	    \cthreevec{{29}/{45}}{4/9}{8/{45}} \\
	  </me>
	</p>

	<p>
	  Alternatively, we use the matrix <m>QQ^{\transpose}</m>,
	  as in <xref ref="prop-proj-orthonormal" />, to find that
	  <me>
	    \bhat = QQ^{\transpose}\bvec = 
	    \begin{bmatrix}
	    {29}/{45} \amp {4}/{9} \amp {8}/{45} \\
	    {4}/{9} \amp {4}/{9} \amp -{2}/{9} \\
	    {8}/{45} \amp -{2}/{9} \amp {41}/{45}
	    \end{bmatrix}\threevec100
	    =
	    \cthreevec{{29}/{45}}{4/9}{8/{45}}
	  </me>.
	</p>
      </statement>
    </example>

    <activity>
      <statement>
	<p>
	  <ol marker="a.">
	    <li>
	      <p>
		Suppose that <m>L</m> is the line in <m>\real^3</m>
		defined by the vector
		<m>\wvec=\threevec{1}{2}{-2}</m>.
		  </p>
		<sage language="python">
		  <input>
		  </input>
		</sage>
		<p>
		<ol marker="1.">
		  <li>
		    <p>
		      Find an orthonormal basis <m>\uvec</m> for
		      <m>L</m>.
		    </p>
		  </li>
		  <li>
		    <p>
		      Construct the matrix
		      <m>Q = \begin{bmatrix}\uvec\end{bmatrix}</m> and
		      use it to construct the matrix <m>P</m> that
		      projects vectors orthogonally onto <m>L</m>.
		    </p>
		  </li>
		  <li>
		    <p>
		      Use your matrix to find <m>\bhat</m>, the
		      orthogonal projection 
		      of <m>\bvec=\threevec111</m> onto <m>L</m>.
		    </p>
		  </li>

		  <li>
		    <p>
		      Find <m>\rank(P)</m> and explain its geometric
		      significance.
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>

	    <li>
	      <p>
		The vectors
		<me>
		  \wvec_1 = \fourvec1111,\hspace{24pt}
		  \wvec_2 = \fourvec011{-2}
		</me>
		form an orthogonal basis of <m>W</m>, a two-dimensional
		subspace 
		of <m>\real^4</m>.
	</p>
		<sage language="python">
		  <input>
		  </input>
		</sage>
		<p>
		<ol marker="1.">
		  <li>
		    <p>
		      Use the projection formula from <xref
		      ref="prop-proj-formula" /> to find <m>\bhat</m>,
		      the orthogonal projection of
		      <m>\bvec=\fourvec92{-2}3</m> onto <m>W</m>.
		    </p>
		  </li>

		  <li>
		    <p>
		      Find an orthonormal basis <m>\uvec_1</m> and
		      <m>\uvec_2</m> for <m>W</m> and use it to
		      construct the matrix 
		      <m>P</m> that projects vectors orthogonally onto
		      <m>W</m>.  Check that <m>P\bvec = \bhat</m>, the
		      orthogonal projection you found in the previous
		      part of this activity.
		    </p>
		  </li>
		  <li>
		    <p>
		      Find <m>\rank(P)</m> and explain its geometric
		      significance.
		    </p>
		  </li>

		  <li>
		    <p>
		      Find a basis for <m>W^\perp</m>.
		    </p>
		  </li>

		  <li>
		    <p>
		      Find a vector <m>\bvec^\perp</m> in <m>W^\perp</m>
		      such that
		      <me>
			\bvec = \bhat + \bvec^\perp.
		      </me>
		    </p>
		  </li>

		  <li>
		    <p>
		      Find the product <m>Q^{\transpose}Q</m> and explain your
		      result.
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>
	  </ol>
	</p>
      </statement>

      <answer>
	<p>
	  <ol marker="a.">
	    <li>
	      <p>
		<ol marker="1.">
		  <li>
		    <p>
		      <m>\uvec=\threevec{1/3}{2/3}{-2/3}</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>QQ^{\transpose} = \begin{bmatrix}
		      1/9 \amp 2/9 \amp -2/9 \\
		      2/9 \amp 4/9 \amp -4/9 \\
		      -2/9 \amp -4/9 \amp 4/9
		      \end{bmatrix}</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\bhat=\threevec{1/9}{2/9}{-2/9}</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\rank(P)=1</m>
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>
	    <li>
	      <p>
		<ol marker="1.">
		  <li>
		    <p>
		      <m>\bhat = \fourvec3235</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>P = \begin{bmatrix}
		      1/4 \amp 1/4 \amp 1/4 \amp 1/4 \\
		      1/4 \amp 5/12 \amp 5/12 \amp -1/12 \\
		      1/4 \amp 5/12 \amp 5/12 \amp 1/12 \\
		      1/4 \amp -1/12 \amp -1/12 \amp 11/12
		      \end{bmatrix}
		      </m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\rank(P)=2</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\vvec_1=\fourvec0{-1}10</m> and
		      <m>\vvec_2=\fourvec{-3}{-2}01</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\bvec^\perp = 
		      \fourvec60{-4}{-2}</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>Q^{\transpose}Q = \begin{bmatrix}
		      1 \amp 0 \\
		      0 \amp 1
		      \end{bmatrix}</m>
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>
	  </ol>
	</p>
      </answer>
		
      <solution>
	<p>
	  <ol marker="a.">
	    <li>
	      <p>
		<ol marker="1.">
		  <li>
		    <p>
		      <m>\uvec=\threevec{1/3}{2/3}{-2/3}</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>QQ^{\transpose} = \begin{bmatrix}
		      1/9 \amp 2/9 \amp -2/9 \\
		      2/9 \amp 4/9 \amp -4/9 \\
		      -2/9 \amp -4/9 \amp 4/9
		      \end{bmatrix}</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\bhat=\threevec{1/9}{2/9}{-2/9}</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      We find that <m>\rank(P)</m>, which makes sense
		      because <m>\col(P) = L</m>, a 1-dimensional
		      subspace of <m>\real^3</m>.
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>
	    <li>
	      <p>
		<ol marker="1.">
		  <li>
		    <p>
		      <m>\bhat = \fourvec3235</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>P = \begin{bmatrix}
		      1/4 \amp 1/4 \amp 1/4 \amp 1/4 \\
		      1/4 \amp 5/12 \amp 5/12 \amp -1/12 \\
		      1/4 \amp 5/12 \amp 5/12 \amp 1/12 \\
		      1/4 \amp -1/12 \amp -1/12 \amp 11/12
		      \end{bmatrix}
		      </m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>\rank(P)=2</m> since <m>\col(P) = W</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      Since <m>W=\col(P)</m>, then <m>W^\perp =
		      \nul(P)</m>, which gives
		      <m>\vvec_1=\fourvec0{-1}10</m> and
		      <m>\vvec_2=\fourvec{-3}{-2}01</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      We can find <m>\bvec^\perp = \bvec - \bhat =
		      \fourvec60{-4}{-2}</m>
		    </p>
		  </li>
		  <li>
		    <p>
		      <m>Q^{\transpose}Q = \begin{bmatrix}
		      1 \amp 0 \\
		      0 \amp 1
		      \end{bmatrix}
		      </m> since this product computes the dot
		      products between the columns of <m>Q</m>.
		    </p>
		  </li>
		</ol>
	      </p>
	    </li>
	  </ol>
	</p>
      </solution>

    </activity>

    <p>
      This activity demonstrates one issue of note.  We found
      <m>\bhat</m>, the orthogonal projection of <m>\bvec</m> onto
      <m>W</m>, by requiring that <m>\bvec-\bhat</m> be orthogonal to
      <m>W</m>.  In other words, <m>\bvec-\bhat</m> is a vector in the
      orthogonal complement
      <m>W^\perp</m>, which we may denote <m>\bvec^\perp</m>.  This
      explains the following proposition, which is illustrated in
      <xref ref="fig-orthog-decomp" />
    </p>

    <proposition xml:id="prop-orthog-decomp">
      <statement>
		<p>
	If <m>W</m> is a subspace of <m>\real^n</m> with orthogonal
	complement <m>W^\perp</m>, then any <m>n</m>-dimensional
	vector <m>\bvec</m> can be uniquely written as
	<me>
	  \bvec = \bhat + \bvec^\perp
	</me>
	where <m>\bhat</m> is in <m>W</m> and <m>\bvec^\perp</m> is in
	<m>W^\perp</m>.  The vector <m>\bhat</m> is the orthogonal
	projection of <m>\bvec</m> onto <m>W</m> and
	<m>\bvec^\perp</m> is the orthogonal projection of
	<m>\bvec</m> onto <m>W^\perp</m>.
</p>
      </statement>
    </proposition>

    <figure xml:id="fig-orthog-decomp">
      <caption>
	A vector <m>\bvec</m> along with <m>\bhat</m>, its orthogonal
	projection onto the line <m>L</m>, and <m>\bvec^\perp</m>, its
	orthogonal projection onto the orthogonal complement
	<m>L^\perp</m>.
      </caption>
      <sidebyside width="45%">
	<image source="images/orthog-decomp" />
      </sidebyside>
    </figure>
   
	<assemblage>
		<title>Summary of orthogonal projection</title>
    <p>
      Let's summarize what we've found.  If <m>Q</m> is a matrix whose
      columns <m>\uvec_1, \uvec_2,\ldots,\uvec_n</m> form an
      orthonormal set in <m>\real^m</m>, then
      <ul>
	<li>
	  <p>
	    <m>Q^{\transpose}Q = I_n</m>, the <m>n\by n</m> identity
	    matrix, because this product computes the dot products
	    between the columns of <m>Q</m>.
	  </p>
	</li>
	<li>
	  <p>
	    <m>QQ^{\transpose}</m> is the matrix the projects vectors
	    orthogonally onto <m>W</m>, the subspace of <m>\real^m</m>
	    spanned by <m>\uvec_1,\ldots,\uvec_n</m>.
	  </p>
	</li>
      </ul>
      As we've said before, matrix multiplication depends on the order
      in which we multiply the matrices, and we see this clearly here.
    </p>
</assemblage>

    <p>
      Because <m>Q^{\transpose}Q=I</m>, there is a temptation to say that
      <m>Q</m> is invertible.  This is usually not the case, however.
      Remember that an invertible matrix must be a square matrix, and
      the matrix <m>Q</m> will only be square if <m>n=m</m>.  In this
      case, there are <m>m</m> vectors in the orthonormal set so the
      subspace <m>W</m> spanned by the vectors
      <m>\uvec_1,\uvec_2,\ldots,\uvec_m</m> is <m>\real^m</m>.  If
      <m>\bvec</m> is a vector in <m>\real^m</m>, then
      <m>\bhat=QQ^{\transpose}\bvec</m> is the orthogonal projection of
      <m>\bvec</m> onto <m>\real^m</m>.  In other words,
      <m>QQ^{\transpose}\bvec</m> is the closest vector in <m>\real^m</m> to
      <m>\bvec</m>, and this closest vector must be <m>\bvec</m>
      itself.  Therefore, <m>QQ^{\transpose}\bvec = \bvec</m>, which means that
      <m>QQ^{\transpose}=I</m>.  In this case, <m>Q</m> is an invertible matrix.
    </p>

    <example>
      <statement>
	<p>
	  Consider the orthonormal set of vectors
	  <me>
	    \uvec_1=\threevec{1/\sqrt{3}}{-1/\sqrt{3}}{1/\sqrt{3}},
	    \hspace{24pt}
	    \uvec_2=\threevec{1/\sqrt{2}}{1/\sqrt{2}}0
	  </me>
	  and the matrix they define
	  <me>
	    Q = \begin{bmatrix}
	    1/\sqrt{3} \amp 1/\sqrt{2} \\
	    -1/\sqrt{3} \amp 1/\sqrt{2} \\
	    1/\sqrt{3} \amp 0 \\
	    \end{bmatrix}
	  </me>.
	  In this case, <m>\uvec_1</m> and <m>\uvec_2</m> span a
	  plane, a 2-dimensional subspace of <m>\real^3</m>.  We know
	  that <m>Q^{\transpose}Q = I_2</m> and <m>QQ^{\transpose}</m> projects vectors
	  orthogonally onto the plane.  However, <m>Q</m> is not a
	  square matrix so it cannot be invertible.
	</p>
      </statement>
    </example>
	
    <example>
      <statement>
	<p>
	  Now consider the orthonormal set of vectors
	  <me>
	    \uvec_1=\threevec{1/\sqrt{3}}{-1/\sqrt{3}}{1/\sqrt{3}},
	    \hspace{24pt}
	    \uvec_2=\threevec{1/\sqrt{2}}{1/\sqrt{2}}0,
	    \hspace{24pt}
	    \uvec_3=\threevec{1/\sqrt{6}}{-1/\sqrt{6}}{-2/\sqrt{6}}
	  </me>
	  and the matrix they define
	  <me>
	    Q = \begin{bmatrix}
	    1/\sqrt{3} \amp 1/\sqrt{2} \amp 1/\sqrt{6} \\
	    -1/\sqrt{3} \amp 1/\sqrt{2} \amp -1/\sqrt{6} \\
	    1/\sqrt{3} \amp 0 \amp -2/\sqrt{6} \\
	    \end{bmatrix}
	  </me>.
	  Here, <m>\uvec_1</m>, <m>\uvec_2</m>, and <m>\uvec_3</m>
	  form a basis for <m>\real^3</m> so that both <m>Q^{\transpose}Q=I_3</m>
	  and <m>QQ^{\transpose}=I_3</m>.  Therefore, <m>Q</m> is a square matrix
	  and is invertible.
	</p>

	<p>
	  Moreover, since <m>Q^{\transpose}Q = I</m>, we see that <m>Q^{-1} =
	  Q^{\transpose}</m> so finding the inverse of <m>Q</m> is as simple as
	  writing its transpose.  Matrices with this property are very
	  special and will play an important role in our upcoming
	  work.  We will therefore give them a special name.
	</p>
      </statement>
    </example>

    <definition>
	<idx> orthogonal matrix </idx>
      <statement>
	<p>
	  A square <m>m\by m</m> matrix <m>Q</m> whose columns form
	  an orthonormal basis for <m>\real^m</m> is called <term>
	  orthogonal</term>.  
	</p>
      </statement>
    </definition>

	<warning>
		<title>Potentially confusing terminology</title>
    <p>
      This terminology can be a little confusing.  We call a basis
      orthogonal if the basis vectors are orthogonal to one another.
      However, a matrix is orthogonal if the columns are orthogonal to
      one another and have unit length.  It pays to keep
      this in mind
      when reading statements about orthogonal bases and orthogonal
      matrices.  In the meantime, we record the following
      proposition. 
    </p>
	</warning>

    <proposition xml:id="prop-orthog-matrix">
      <statement>
	<p>
	  An orthogonal matrix <m>Q</m> is invertible and its inverse
	  <m>Q^{-1} = Q^{\transpose}</m>.
	</p>
      </statement>
    </proposition>
  </subsection>
  
  <subsection>
    <title> Summary </title>

    <p>
      This section introduced orthogonal sets and the projection
      formula that allows us to project vectors orthogonally onto a
      subspace.
      <ul>
	<li>
	  <p>
	    Given an orthogonal set <m>\wvec_1,\wvec_2,\ldots,\wvec_n</m>
	    that spans an <m>n</m>-dimensional
	    subspace <m>W</m> of <m>\real^m</m>, the orthogonal 
	    projection of <m>\bvec</m> onto <m>W</m> is the vector in <m>W</m>
	    closest to <m>\bvec</m> and may be written as 
		<md>
			<mrow>
				\bhat \amp = 
				\proj{\bvec}{\wvec_1} +
				\proj{\bvec}{\wvec_2} + \cdots +
				\proj{\bvec}{\wvec_n} 
			</mrow>
			<mrow> \amp </mrow>
			<mrow> \amp = 
					\frac{\bvec\cdot\wvec_1}{\wvec_1\cdot\wvec_1}\wvec_1 +
					\frac{\bvec\cdot\wvec_2}{\wvec_2\cdot\wvec_2}\wvec_2 +
					\cdots +
					\frac{\bvec\cdot\wvec_n}{\wvec_n\cdot\wvec_n}\wvec_n
			</mrow>
		</md>.
	  </p>
	</li>
	  
	<li>
	  <p>
	    If <m>\uvec_1,\uvec_2,\ldots,\uvec_n</m> is an
	    orthonormal basis of <m>W</m> and <m>Q</m> is the matrix
	    whose columns are <m>\uvec_i</m>, then the matrix <m>P=QQ^{\transpose}</m>
	    projects vectors orthogonally onto <m>W</m>. 
	  </p>
	</li>
	
	<li>
	  <p>
	    If the columns of <m>Q</m> form an orthonormal basis for
	    an <m>n</m>-dimensional subspace of <m>\real^m</m>, then
	    <m>Q^{\transpose}Q=I_n</m>.  
	  </p>
	</li>

	<li>
	  <p>
	    An <term>orthogonal matrix</term> <m>Q</m> is a square matrix whose
	    columns form an orthonormal basis.  In this case,
	    <m>QQ^{\transpose}=Q^{\transpose}Q = I</m> so that <m>Q^{-1} = Q^{\transpose}</m>.
	  </p>
	</li>
	
      </ul>
    </p>

	<p>
		In <xref ref="sec-gram-schmidt" /> we will learn how to find an orthogonal basis for 
		any space give any (potentially not orthogonal) basis for that space.  Once we have done that,
		we can extend the results here to any subspace of <m>\real^n</m>.
	</p>
  </subsection>

  <xi:include href="exercises/exercises6-3.ptx" />
	      
</section>

